<?php

/**
 * @file
 * Provides a honor entity type.
 */

use Drupal\Core\Render\Element;

/**
 * Implements hook_theme().
 */
function mbgna_honor_theme() {
  return [
    'honor' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for honor templates.
 *
 * Default template: honor.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the honor information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_honor(array &$variables) {
  $honor = $variables['elements']['#honor'];
  if ($honor) {
    $variables['url'] = $honor->toUrl('canonical')->toString();
    $variables['bundle'] = $honor->bundle();
    $variables['status'] = $honor->status->getString();
  }

  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function mbgna_honor_theme_suggestions_honor(array $variables) {
  $suggestions = [];
  $honor = $variables['elements']['#honor'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  $suggestions[] = 'honor__' . $sanitized_view_mode;
  $suggestions[] = 'honor__' . $honor->bundle();
  $suggestions[] = 'honor__' . $honor->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'honor__' . $honor->id();
  $suggestions[] = 'honor__' . $honor->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}
